Grammar

    0 $accept: translation_unit $end

    1 M: ε

    2 N: ε

    3 primary_expression: IDENTIFIER
    4                   | INTEGER_CONST
    5                   | CHARACTER_CONST
    6                   | STRING_LITERAL
    7                   | RDBLT expression RDBRT

    8 postfix_expression: primary_expression
    9                   | postfix_expression SQBLT expression SQBRT
   10                   | postfix_expression RDBLT argument_expression_list_opt RDBRT
   11                   | postfix_expression PTRARW IDENTIFIER

   12 argument_expression_list_opt: argument_expression_list
   13                             | ε

   14 argument_expression_list: assignment_expression
   15                         | argument_expression_list COMMA assignment_expression

   16 unary_expression: postfix_expression
   17                 | unary_operator unary_expression

   18 unary_operator: AMPERSOND
   19               | MULT
   20               | ADD
   21               | SUB
   22               | NOT

   23 multiplicative_expression: unary_expression
   24                          | multiplicative_expression MULT unary_expression
   25                          | multiplicative_expression DIV unary_expression
   26                          | multiplicative_expression MOD unary_expression

   27 additive_expression: multiplicative_expression
   28                    | additive_expression ADD multiplicative_expression
   29                    | additive_expression SUB multiplicative_expression

   30 relational_expression: additive_expression
   31                      | relational_expression LT additive_expression
   32                      | relational_expression GT additive_expression
   33                      | relational_expression LTE additive_expression
   34                      | relational_expression GTE additive_expression

   35 equality_expression: relational_expression
   36                    | equality_expression EQUALTO relational_expression
   37                    | equality_expression NOTEQUAL relational_expression

   38 logical_AND_expression: equality_expression
   39                       | logical_AND_expression N AND M equality_expression

   40 logical_OR_expression: logical_AND_expression
   41                      | logical_OR_expression N OR M logical_AND_expression

   42 conditional_expression: logical_OR_expression
   43                       | logical_OR_expression N QSTMK M expression N COLN M conditional_expression

   44 assignment_expression: conditional_expression
   45                      | unary_expression ASGN assignment_expression

   46 expression: assignment_expression

   47 declaration: type_specifier init_declarator SCOLN

   48 init_declarator: declarator
   49                | declarator ASGN initializer

   50 type_specifier: VOID
   51               | CHAR
   52               | INT

   53 declarator: pointer direct_declarator
   54           | direct_declarator

   55 direct_declarator: IDENTIFIER
   56                  | IDENTIFIER SQBLT INTEGER_CONST SQBRT
   57                  | PRA RDBLT changetable_dec parameter_list RDBRT
   58                  | PRA RDBLT changetable_dec RDBRT

   59 PRA: IDENTIFIER

   60 pointer: MULT

   61 parameter_list: parameter_declaration
   62               | parameter_list COMMA parameter_declaration

   63 parameter_declaration: type_specifier pointer IDENTIFIER
   64                      | type_specifier IDENTIFIER
   65                      | type_specifier pointer
   66                      | type_specifier

   67 initializer: assignment_expression

   68 statement: compound_statement
   69          | expression_statement
   70          | selection_statement
   71          | iteration_statement
   72          | jump_statement

   73 compound_statement: CRBLT block_item_list_opt CRBRT

   74 block_item_list: block_item
   75                | block_item_list M block_item

   76 block_item_list_opt: block_item_list
   77                    | ε

   78 block_item: declaration
   79           | statement

   80 expression_statement: expression SCOLN
   81                     | SCOLN

   82 selection_statement: IF RDBLT expression N RDBRT M statement N
   83                    | IF RDBLT expression N RDBRT M statement N ELSE M statement

   84 iteration_statement: FOR RDBLT expression_statement M expression_statement RDBRT M statement
   85                    | FOR RDBLT expression_statement M expression_statement M expression N RDBRT M statement

   86 jump_statement: RETURN expression SCOLN
   87               | RETURN SCOLN

   88 translation_unit: external_declaration
   89                 | translation_unit external_declaration

   90 external_declaration: function_definition
   91                     | declaration

   92 function_definition: type_specifier declarator changetable_def compound_statement

   93 changetable_dec: ε

   94 changetable_def: ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CHAR (258) 51
    ELSE (259) 83
    FOR (260) 84 85
    IF (261) 82 83
    INT (262) 52
    RETURN (263) 86 87
    VOID (264) 50
    IDENTIFIER <ida> (265) 3 11 55 56 59 63 64
    INTEGER_CONST <intval> (266) 4 56
    CHARACTER_CONST <char_value> (267) 5
    STRING_LITERAL <str_value> (268) 6
    SQBRT (269) 9 56
    SQBLT (270) 9 56
    RDBRT (271) 7 10 57 58 82 83 84 85
    RDBLT (272) 7 10 57 58 82 83 84 85
    SUB (273) 21 29
    ADD (274) 20 28
    MULT (275) 19 24 60
    DIV (276) 25
    CRBLT (277) 73
    CRBRT (278) 73
    PTRARW (279) 11
    AMPERSOND (280) 18
    MOD (281) 26
    NOT (282) 22
    QSTMK (283) 43
    LT (284) 31
    GT (285) 32
    LTE (286) 33
    GTE (287) 34
    EQUALTO (288) 36
    NOTEQUAL (289) 37
    AND (290) 39
    OR (291) 41
    ASGN (292) 45 49
    COLN (293) 43
    SCOLN (294) 47 80 81 86 87
    COMMA (295) 15 62
    "then" (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    M <intval> (43)
        on left: 1
        on right: 39 41 43 75 82 83 84 85
    N <smt> (44)
        on left: 2
        on right: 39 41 43 82 83 85
    primary_expression <exp> (45)
        on left: 3 4 5 6 7
        on right: 8
    postfix_expression <arr> (46)
        on left: 8 9 10 11
        on right: 9 10 11 16
    argument_expression_list_opt <num_para> (47)
        on left: 12 13
        on right: 10
    argument_expression_list <num_para> (48)
        on left: 14 15
        on right: 12 15
    unary_expression <arr> (49)
        on left: 16 17
        on right: 17 23 24 25 26 45
    unary_operator <uop> (50)
        on left: 18 19 20 21 22
        on right: 17
    multiplicative_expression <exp> (51)
        on left: 23 24 25 26
        on right: 24 25 26 27 28 29
    additive_expression <exp> (52)
        on left: 27 28 29
        on right: 28 29 30 31 32 33 34
    relational_expression <exp> (53)
        on left: 30 31 32 33 34
        on right: 31 32 33 34 35 36 37
    equality_expression <exp> (54)
        on left: 35 36 37
        on right: 36 37 38 39
    logical_AND_expression <exp> (55)
        on left: 38 39
        on right: 39 40 41
    logical_OR_expression <exp> (56)
        on left: 40 41
        on right: 41 42 43
    conditional_expression <exp> (57)
        on left: 42 43
        on right: 43 44
    assignment_expression <exp> (58)
        on left: 44 45
        on right: 14 15 45 46 67
    expression <exp> (59)
        on left: 46
        on right: 7 9 43 80 82 83 85 86
    declaration (60)
        on left: 47
        on right: 78 91
    init_declarator <ste> (61)
        on left: 48 49
        on right: 47
    type_specifier (62)
        on left: 50 51 52
        on right: 47 63 64 65 66 92
    declarator <ste> (63)
        on left: 53 54
        on right: 48 49 92
    direct_declarator <ste> (64)
        on left: 55 56 57 58
        on right: 53 54
    PRA <ida> (65)
        on left: 59
        on right: 57 58
    pointer (66)
        on left: 60
        on right: 53 63 65
    parameter_list <tpn> (67)
        on left: 61 62
        on right: 57 62
    parameter_declaration <tpn> (68)
        on left: 63 64 65 66
        on right: 61 62
    initializer <ste> (69)
        on left: 67
        on right: 49
    statement <smt> (70)
        on left: 68 69 70 71 72
        on right: 79 82 83 84 85
    compound_statement <smt> (71)
        on left: 73
        on right: 68 92
    block_item_list <smt> (72)
        on left: 74 75
        on right: 75 76
    block_item_list_opt <smt> (73)
        on left: 76 77
        on right: 73
    block_item <smt> (74)
        on left: 78 79
        on right: 74 75
    expression_statement <exp> (75)
        on left: 80 81
        on right: 69 84 85
    selection_statement <smt> (76)
        on left: 82 83
        on right: 70
    iteration_statement <smt> (77)
        on left: 84 85
        on right: 71
    jump_statement <smt> (78)
        on left: 86 87
        on right: 72
    translation_unit (79)
        on left: 88 89
        on right: 0 89
    external_declaration (80)
        on left: 90 91
        on right: 88 89
    function_definition (81)
        on left: 92
        on right: 90
    changetable_dec (82)
        on left: 93
        on right: 57 58
    changetable_def (83)
        on left: 94
        on right: 92


State 0

    0 $accept: • translation_unit $end

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    declaration           go to state 4
    type_specifier        go to state 5
    translation_unit      go to state 6
    external_declaration  go to state 7
    function_definition   go to state 8


State 1

   51 type_specifier: CHAR •

    $default  reduce using rule 51 (type_specifier)


State 2

   52 type_specifier: INT •

    $default  reduce using rule 52 (type_specifier)


State 3

   50 type_specifier: VOID •

    $default  reduce using rule 50 (type_specifier)


State 4

   91 external_declaration: declaration •

    $default  reduce using rule 91 (external_declaration)


State 5

   47 declaration: type_specifier • init_declarator SCOLN
   92 function_definition: type_specifier • declarator changetable_def compound_statement

    IDENTIFIER  shift, and go to state 9
    MULT        shift, and go to state 10

    init_declarator    go to state 11
    declarator         go to state 12
    direct_declarator  go to state 13
    PRA                go to state 14
    pointer            go to state 15


State 6

    0 $accept: translation_unit • $end
   89 translation_unit: translation_unit • external_declaration

    $end  shift, and go to state 16
    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    declaration           go to state 4
    type_specifier        go to state 5
    external_declaration  go to state 17
    function_definition   go to state 8


State 7

   88 translation_unit: external_declaration •

    $default  reduce using rule 88 (translation_unit)


State 8

   90 external_declaration: function_definition •

    $default  reduce using rule 90 (external_declaration)


State 9

   55 direct_declarator: IDENTIFIER •
   56                  | IDENTIFIER • SQBLT INTEGER_CONST SQBRT
   59 PRA: IDENTIFIER •

    SQBLT  shift, and go to state 18

    RDBLT     reduce using rule 59 (PRA)
    $default  reduce using rule 55 (direct_declarator)


State 10

   60 pointer: MULT •

    $default  reduce using rule 60 (pointer)


State 11

   47 declaration: type_specifier init_declarator • SCOLN

    SCOLN  shift, and go to state 19


State 12

   48 init_declarator: declarator •
   49                | declarator • ASGN initializer
   92 function_definition: type_specifier declarator • changetable_def compound_statement

    ASGN  shift, and go to state 20

    CRBLT     reduce using rule 94 (changetable_def)
    $default  reduce using rule 48 (init_declarator)

    changetable_def  go to state 21


State 13

   54 declarator: direct_declarator •

    $default  reduce using rule 54 (declarator)


State 14

   57 direct_declarator: PRA • RDBLT changetable_dec parameter_list RDBRT
   58                  | PRA • RDBLT changetable_dec RDBRT

    RDBLT  shift, and go to state 22


State 15

   53 declarator: pointer • direct_declarator

    IDENTIFIER  shift, and go to state 9

    direct_declarator  go to state 23
    PRA                go to state 14


State 16

    0 $accept: translation_unit $end •

    $default  accept


State 17

   89 translation_unit: translation_unit external_declaration •

    $default  reduce using rule 89 (translation_unit)


State 18

   56 direct_declarator: IDENTIFIER SQBLT • INTEGER_CONST SQBRT

    INTEGER_CONST  shift, and go to state 24


State 19

   47 declaration: type_specifier init_declarator SCOLN •

    $default  reduce using rule 47 (declaration)


State 20

   49 init_declarator: declarator ASGN • initializer

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 46
    initializer                go to state 47


State 21

   92 function_definition: type_specifier declarator changetable_def • compound_statement

    CRBLT  shift, and go to state 48

    compound_statement  go to state 49


State 22

   57 direct_declarator: PRA RDBLT • changetable_dec parameter_list RDBRT
   58                  | PRA RDBLT • changetable_dec RDBRT

    $default  reduce using rule 93 (changetable_dec)

    changetable_dec  go to state 50


State 23

   53 declarator: pointer direct_declarator •

    $default  reduce using rule 53 (declarator)


State 24

   56 direct_declarator: IDENTIFIER SQBLT INTEGER_CONST • SQBRT

    SQBRT  shift, and go to state 51


State 25

    3 primary_expression: IDENTIFIER •

    $default  reduce using rule 3 (primary_expression)


State 26

    4 primary_expression: INTEGER_CONST •

    $default  reduce using rule 4 (primary_expression)


State 27

    5 primary_expression: CHARACTER_CONST •

    $default  reduce using rule 5 (primary_expression)


State 28

    6 primary_expression: STRING_LITERAL •

    $default  reduce using rule 6 (primary_expression)


State 29

    7 primary_expression: RDBLT • expression RDBRT

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 53


State 30

   21 unary_operator: SUB •

    $default  reduce using rule 21 (unary_operator)


State 31

   20 unary_operator: ADD •

    $default  reduce using rule 20 (unary_operator)


State 32

   19 unary_operator: MULT •

    $default  reduce using rule 19 (unary_operator)


State 33

   18 unary_operator: AMPERSOND •

    $default  reduce using rule 18 (unary_operator)


State 34

   22 unary_operator: NOT •

    $default  reduce using rule 22 (unary_operator)


State 35

    8 postfix_expression: primary_expression •

    $default  reduce using rule 8 (postfix_expression)


State 36

    9 postfix_expression: postfix_expression • SQBLT expression SQBRT
   10                   | postfix_expression • RDBLT argument_expression_list_opt RDBRT
   11                   | postfix_expression • PTRARW IDENTIFIER
   16 unary_expression: postfix_expression •

    SQBLT   shift, and go to state 54
    RDBLT   shift, and go to state 55
    PTRARW  shift, and go to state 56

    $default  reduce using rule 16 (unary_expression)


State 37

   23 multiplicative_expression: unary_expression •
   45 assignment_expression: unary_expression • ASGN assignment_expression

    ASGN  shift, and go to state 57

    $default  reduce using rule 23 (multiplicative_expression)


State 38

   17 unary_expression: unary_operator • unary_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression  go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 58
    unary_operator      go to state 38


State 39

   24 multiplicative_expression: multiplicative_expression • MULT unary_expression
   25                          | multiplicative_expression • DIV unary_expression
   26                          | multiplicative_expression • MOD unary_expression
   27 additive_expression: multiplicative_expression •

    MULT  shift, and go to state 59
    DIV   shift, and go to state 60
    MOD   shift, and go to state 61

    $default  reduce using rule 27 (additive_expression)


State 40

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   30 relational_expression: additive_expression •

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 30 (relational_expression)


State 41

   31 relational_expression: relational_expression • LT additive_expression
   32                      | relational_expression • GT additive_expression
   33                      | relational_expression • LTE additive_expression
   34                      | relational_expression • GTE additive_expression
   35 equality_expression: relational_expression •

    LT   shift, and go to state 64
    GT   shift, and go to state 65
    LTE  shift, and go to state 66
    GTE  shift, and go to state 67

    $default  reduce using rule 35 (equality_expression)


State 42

   36 equality_expression: equality_expression • EQUALTO relational_expression
   37                    | equality_expression • NOTEQUAL relational_expression
   38 logical_AND_expression: equality_expression •

    EQUALTO   shift, and go to state 68
    NOTEQUAL  shift, and go to state 69

    $default  reduce using rule 38 (logical_AND_expression)


State 43

   39 logical_AND_expression: logical_AND_expression • N AND M equality_expression
   40 logical_OR_expression: logical_AND_expression •

    AND       reduce using rule 2 (N)
    $default  reduce using rule 40 (logical_OR_expression)

    N  go to state 70


State 44

   41 logical_OR_expression: logical_OR_expression • N OR M logical_AND_expression
   42 conditional_expression: logical_OR_expression •
   43                       | logical_OR_expression • N QSTMK M expression N COLN M conditional_expression

    QSTMK     reduce using rule 2 (N)
    OR        reduce using rule 2 (N)
    $default  reduce using rule 42 (conditional_expression)

    N  go to state 71


State 45

   44 assignment_expression: conditional_expression •

    $default  reduce using rule 44 (assignment_expression)


State 46

   67 initializer: assignment_expression •

    $default  reduce using rule 67 (initializer)


State 47

   49 init_declarator: declarator ASGN initializer •

    $default  reduce using rule 49 (init_declarator)


State 48

   73 compound_statement: CRBLT • block_item_list_opt CRBRT

    CHAR             shift, and go to state 1
    FOR              shift, and go to state 72
    IF               shift, and go to state 73
    INT              shift, and go to state 2
    RETURN           shift, and go to state 74
    VOID             shift, and go to state 3
    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    CRBLT            shift, and go to state 48
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    $default  reduce using rule 77 (block_item_list_opt)

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    declaration                go to state 77
    type_specifier             go to state 78
    statement                  go to state 79
    compound_statement         go to state 80
    block_item_list            go to state 81
    block_item_list_opt        go to state 82
    block_item                 go to state 83
    expression_statement       go to state 84
    selection_statement        go to state 85
    iteration_statement        go to state 86
    jump_statement             go to state 87


State 49

   92 function_definition: type_specifier declarator changetable_def compound_statement •

    $default  reduce using rule 92 (function_definition)


State 50

   57 direct_declarator: PRA RDBLT changetable_dec • parameter_list RDBRT
   58                  | PRA RDBLT changetable_dec • RDBRT

    CHAR   shift, and go to state 1
    INT    shift, and go to state 2
    VOID   shift, and go to state 3
    RDBRT  shift, and go to state 88

    type_specifier         go to state 89
    parameter_list         go to state 90
    parameter_declaration  go to state 91


State 51

   56 direct_declarator: IDENTIFIER SQBLT INTEGER_CONST SQBRT •

    $default  reduce using rule 56 (direct_declarator)


State 52

   46 expression: assignment_expression •

    $default  reduce using rule 46 (expression)


State 53

    7 primary_expression: RDBLT expression • RDBRT

    RDBRT  shift, and go to state 92


State 54

    9 postfix_expression: postfix_expression SQBLT • expression SQBRT

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 93


State 55

   10 postfix_expression: postfix_expression RDBLT • argument_expression_list_opt RDBRT

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    $default  reduce using rule 13 (argument_expression_list_opt)

    primary_expression            go to state 35
    postfix_expression            go to state 36
    argument_expression_list_opt  go to state 94
    argument_expression_list      go to state 95
    unary_expression              go to state 37
    unary_operator                go to state 38
    multiplicative_expression     go to state 39
    additive_expression           go to state 40
    relational_expression         go to state 41
    equality_expression           go to state 42
    logical_AND_expression        go to state 43
    logical_OR_expression         go to state 44
    conditional_expression        go to state 45
    assignment_expression         go to state 96


State 56

   11 postfix_expression: postfix_expression PTRARW • IDENTIFIER

    IDENTIFIER  shift, and go to state 97


State 57

   45 assignment_expression: unary_expression ASGN • assignment_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 98


State 58

   17 unary_expression: unary_operator unary_expression •

    $default  reduce using rule 17 (unary_expression)


State 59

   24 multiplicative_expression: multiplicative_expression MULT • unary_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression  go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 99
    unary_operator      go to state 38


State 60

   25 multiplicative_expression: multiplicative_expression DIV • unary_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression  go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 100
    unary_operator      go to state 38


State 61

   26 multiplicative_expression: multiplicative_expression MOD • unary_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression  go to state 35
    postfix_expression  go to state 36
    unary_expression    go to state 101
    unary_operator      go to state 38


State 62

   29 additive_expression: additive_expression SUB • multiplicative_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 103


State 63

   28 additive_expression: additive_expression ADD • multiplicative_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 104


State 64

   31 relational_expression: relational_expression LT • additive_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 105


State 65

   32 relational_expression: relational_expression GT • additive_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 106


State 66

   33 relational_expression: relational_expression LTE • additive_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 107


State 67

   34 relational_expression: relational_expression GTE • additive_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 108


State 68

   36 equality_expression: equality_expression EQUALTO • relational_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 109


State 69

   37 equality_expression: equality_expression NOTEQUAL • relational_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 110


State 70

   39 logical_AND_expression: logical_AND_expression N • AND M equality_expression

    AND  shift, and go to state 111


State 71

   41 logical_OR_expression: logical_OR_expression N • OR M logical_AND_expression
   43 conditional_expression: logical_OR_expression N • QSTMK M expression N COLN M conditional_expression

    QSTMK  shift, and go to state 112
    OR     shift, and go to state 113


State 72

   84 iteration_statement: FOR • RDBLT expression_statement M expression_statement RDBRT M statement
   85                    | FOR • RDBLT expression_statement M expression_statement M expression N RDBRT M statement

    RDBLT  shift, and go to state 114


State 73

   82 selection_statement: IF • RDBLT expression N RDBRT M statement N
   83                    | IF • RDBLT expression N RDBRT M statement N ELSE M statement

    RDBLT  shift, and go to state 115


State 74

   86 jump_statement: RETURN • expression SCOLN
   87               | RETURN • SCOLN

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 116

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 117


State 75

   81 expression_statement: SCOLN •

    $default  reduce using rule 81 (expression_statement)


State 76

   80 expression_statement: expression • SCOLN

    SCOLN  shift, and go to state 118


State 77

   78 block_item: declaration •

    $default  reduce using rule 78 (block_item)


State 78

   47 declaration: type_specifier • init_declarator SCOLN

    IDENTIFIER  shift, and go to state 9
    MULT        shift, and go to state 10

    init_declarator    go to state 11
    declarator         go to state 119
    direct_declarator  go to state 13
    PRA                go to state 14
    pointer            go to state 15


State 79

   79 block_item: statement •

    $default  reduce using rule 79 (block_item)


State 80

   68 statement: compound_statement •

    $default  reduce using rule 68 (statement)


State 81

   75 block_item_list: block_item_list • M block_item
   76 block_item_list_opt: block_item_list •

    CRBRT     reduce using rule 76 (block_item_list_opt)
    $default  reduce using rule 1 (M)

    M  go to state 120


State 82

   73 compound_statement: CRBLT block_item_list_opt • CRBRT

    CRBRT  shift, and go to state 121


State 83

   74 block_item_list: block_item •

    $default  reduce using rule 74 (block_item_list)


State 84

   69 statement: expression_statement •

    $default  reduce using rule 69 (statement)


State 85

   70 statement: selection_statement •

    $default  reduce using rule 70 (statement)


State 86

   71 statement: iteration_statement •

    $default  reduce using rule 71 (statement)


State 87

   72 statement: jump_statement •

    $default  reduce using rule 72 (statement)


State 88

   58 direct_declarator: PRA RDBLT changetable_dec RDBRT •

    $default  reduce using rule 58 (direct_declarator)


State 89

   63 parameter_declaration: type_specifier • pointer IDENTIFIER
   64                      | type_specifier • IDENTIFIER
   65                      | type_specifier • pointer
   66                      | type_specifier •

    IDENTIFIER  shift, and go to state 122
    MULT        shift, and go to state 10

    $default  reduce using rule 66 (parameter_declaration)

    pointer  go to state 123


State 90

   57 direct_declarator: PRA RDBLT changetable_dec parameter_list • RDBRT
   62 parameter_list: parameter_list • COMMA parameter_declaration

    RDBRT  shift, and go to state 124
    COMMA  shift, and go to state 125


State 91

   61 parameter_list: parameter_declaration •

    $default  reduce using rule 61 (parameter_list)


State 92

    7 primary_expression: RDBLT expression RDBRT •

    $default  reduce using rule 7 (primary_expression)


State 93

    9 postfix_expression: postfix_expression SQBLT expression • SQBRT

    SQBRT  shift, and go to state 126


State 94

   10 postfix_expression: postfix_expression RDBLT argument_expression_list_opt • RDBRT

    RDBRT  shift, and go to state 127


State 95

   12 argument_expression_list_opt: argument_expression_list •
   15 argument_expression_list: argument_expression_list • COMMA assignment_expression

    COMMA  shift, and go to state 128

    $default  reduce using rule 12 (argument_expression_list_opt)


State 96

   14 argument_expression_list: assignment_expression •

    $default  reduce using rule 14 (argument_expression_list)


State 97

   11 postfix_expression: postfix_expression PTRARW IDENTIFIER •

    $default  reduce using rule 11 (postfix_expression)


State 98

   45 assignment_expression: unary_expression ASGN assignment_expression •

    $default  reduce using rule 45 (assignment_expression)


State 99

   24 multiplicative_expression: multiplicative_expression MULT unary_expression •

    $default  reduce using rule 24 (multiplicative_expression)


State 100

   25 multiplicative_expression: multiplicative_expression DIV unary_expression •

    $default  reduce using rule 25 (multiplicative_expression)


State 101

   26 multiplicative_expression: multiplicative_expression MOD unary_expression •

    $default  reduce using rule 26 (multiplicative_expression)


State 102

   23 multiplicative_expression: unary_expression •

    $default  reduce using rule 23 (multiplicative_expression)


State 103

   24 multiplicative_expression: multiplicative_expression • MULT unary_expression
   25                          | multiplicative_expression • DIV unary_expression
   26                          | multiplicative_expression • MOD unary_expression
   29 additive_expression: additive_expression SUB multiplicative_expression •

    MULT  shift, and go to state 59
    DIV   shift, and go to state 60
    MOD   shift, and go to state 61

    $default  reduce using rule 29 (additive_expression)


State 104

   24 multiplicative_expression: multiplicative_expression • MULT unary_expression
   25                          | multiplicative_expression • DIV unary_expression
   26                          | multiplicative_expression • MOD unary_expression
   28 additive_expression: additive_expression ADD multiplicative_expression •

    MULT  shift, and go to state 59
    DIV   shift, and go to state 60
    MOD   shift, and go to state 61

    $default  reduce using rule 28 (additive_expression)


State 105

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   31 relational_expression: relational_expression LT additive_expression •

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 31 (relational_expression)


State 106

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   32 relational_expression: relational_expression GT additive_expression •

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 32 (relational_expression)


State 107

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   33 relational_expression: relational_expression LTE additive_expression •

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 33 (relational_expression)


State 108

   28 additive_expression: additive_expression • ADD multiplicative_expression
   29                    | additive_expression • SUB multiplicative_expression
   34 relational_expression: relational_expression GTE additive_expression •

    SUB  shift, and go to state 62
    ADD  shift, and go to state 63

    $default  reduce using rule 34 (relational_expression)


State 109

   31 relational_expression: relational_expression • LT additive_expression
   32                      | relational_expression • GT additive_expression
   33                      | relational_expression • LTE additive_expression
   34                      | relational_expression • GTE additive_expression
   36 equality_expression: equality_expression EQUALTO relational_expression •

    LT   shift, and go to state 64
    GT   shift, and go to state 65
    LTE  shift, and go to state 66
    GTE  shift, and go to state 67

    $default  reduce using rule 36 (equality_expression)


State 110

   31 relational_expression: relational_expression • LT additive_expression
   32                      | relational_expression • GT additive_expression
   33                      | relational_expression • LTE additive_expression
   34                      | relational_expression • GTE additive_expression
   37 equality_expression: equality_expression NOTEQUAL relational_expression •

    LT   shift, and go to state 64
    GT   shift, and go to state 65
    LTE  shift, and go to state 66
    GTE  shift, and go to state 67

    $default  reduce using rule 37 (equality_expression)


State 111

   39 logical_AND_expression: logical_AND_expression N AND • M equality_expression

    $default  reduce using rule 1 (M)

    M  go to state 129


State 112

   43 conditional_expression: logical_OR_expression N QSTMK • M expression N COLN M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 130


State 113

   41 logical_OR_expression: logical_OR_expression N OR • M logical_AND_expression

    $default  reduce using rule 1 (M)

    M  go to state 131


State 114

   84 iteration_statement: FOR RDBLT • expression_statement M expression_statement RDBRT M statement
   85                    | FOR RDBLT • expression_statement M expression_statement M expression N RDBRT M statement

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    expression_statement       go to state 132


State 115

   82 selection_statement: IF RDBLT • expression N RDBRT M statement N
   83                    | IF RDBLT • expression N RDBRT M statement N ELSE M statement

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 133


State 116

   87 jump_statement: RETURN SCOLN •

    $default  reduce using rule 87 (jump_statement)


State 117

   86 jump_statement: RETURN expression • SCOLN

    SCOLN  shift, and go to state 134


State 118

   80 expression_statement: expression SCOLN •

    $default  reduce using rule 80 (expression_statement)


State 119

   48 init_declarator: declarator •
   49                | declarator • ASGN initializer

    ASGN  shift, and go to state 20

    $default  reduce using rule 48 (init_declarator)


State 120

   75 block_item_list: block_item_list M • block_item

    CHAR             shift, and go to state 1
    FOR              shift, and go to state 72
    IF               shift, and go to state 73
    INT              shift, and go to state 2
    RETURN           shift, and go to state 74
    VOID             shift, and go to state 3
    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    CRBLT            shift, and go to state 48
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    declaration                go to state 77
    type_specifier             go to state 78
    statement                  go to state 79
    compound_statement         go to state 80
    block_item                 go to state 135
    expression_statement       go to state 84
    selection_statement        go to state 85
    iteration_statement        go to state 86
    jump_statement             go to state 87


State 121

   73 compound_statement: CRBLT block_item_list_opt CRBRT •

    $default  reduce using rule 73 (compound_statement)


State 122

   64 parameter_declaration: type_specifier IDENTIFIER •

    $default  reduce using rule 64 (parameter_declaration)


State 123

   63 parameter_declaration: type_specifier pointer • IDENTIFIER
   65                      | type_specifier pointer •

    IDENTIFIER  shift, and go to state 136

    $default  reduce using rule 65 (parameter_declaration)


State 124

   57 direct_declarator: PRA RDBLT changetable_dec parameter_list RDBRT •

    $default  reduce using rule 57 (direct_declarator)


State 125

   62 parameter_list: parameter_list COMMA • parameter_declaration

    CHAR  shift, and go to state 1
    INT   shift, and go to state 2
    VOID  shift, and go to state 3

    type_specifier         go to state 89
    parameter_declaration  go to state 137


State 126

    9 postfix_expression: postfix_expression SQBLT expression SQBRT •

    $default  reduce using rule 9 (postfix_expression)


State 127

   10 postfix_expression: postfix_expression RDBLT argument_expression_list_opt RDBRT •

    $default  reduce using rule 10 (postfix_expression)


State 128

   15 argument_expression_list: argument_expression_list COMMA • assignment_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 138


State 129

   39 logical_AND_expression: logical_AND_expression N AND M • equality_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 139


State 130

   43 conditional_expression: logical_OR_expression N QSTMK M • expression N COLN M conditional_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 140


State 131

   41 logical_OR_expression: logical_OR_expression N OR M • logical_AND_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 141


State 132

   84 iteration_statement: FOR RDBLT expression_statement • M expression_statement RDBRT M statement
   85                    | FOR RDBLT expression_statement • M expression_statement M expression N RDBRT M statement

    $default  reduce using rule 1 (M)

    M  go to state 142


State 133

   82 selection_statement: IF RDBLT expression • N RDBRT M statement N
   83                    | IF RDBLT expression • N RDBRT M statement N ELSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 143


State 134

   86 jump_statement: RETURN expression SCOLN •

    $default  reduce using rule 86 (jump_statement)


State 135

   75 block_item_list: block_item_list M block_item •

    $default  reduce using rule 75 (block_item_list)


State 136

   63 parameter_declaration: type_specifier pointer IDENTIFIER •

    $default  reduce using rule 63 (parameter_declaration)


State 137

   62 parameter_list: parameter_list COMMA parameter_declaration •

    $default  reduce using rule 62 (parameter_list)


State 138

   15 argument_expression_list: argument_expression_list COMMA assignment_expression •

    $default  reduce using rule 15 (argument_expression_list)


State 139

   36 equality_expression: equality_expression • EQUALTO relational_expression
   37                    | equality_expression • NOTEQUAL relational_expression
   39 logical_AND_expression: logical_AND_expression N AND M equality_expression •

    EQUALTO   shift, and go to state 68
    NOTEQUAL  shift, and go to state 69

    $default  reduce using rule 39 (logical_AND_expression)


State 140

   43 conditional_expression: logical_OR_expression N QSTMK M expression • N COLN M conditional_expression

    $default  reduce using rule 2 (N)

    N  go to state 144


State 141

   39 logical_AND_expression: logical_AND_expression • N AND M equality_expression
   41 logical_OR_expression: logical_OR_expression N OR M logical_AND_expression •

    AND       reduce using rule 2 (N)
    $default  reduce using rule 41 (logical_OR_expression)

    N  go to state 70


State 142

   84 iteration_statement: FOR RDBLT expression_statement M • expression_statement RDBRT M statement
   85                    | FOR RDBLT expression_statement M • expression_statement M expression N RDBRT M statement

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    expression_statement       go to state 145


State 143

   82 selection_statement: IF RDBLT expression N • RDBRT M statement N
   83                    | IF RDBLT expression N • RDBRT M statement N ELSE M statement

    RDBRT  shift, and go to state 146


State 144

   43 conditional_expression: logical_OR_expression N QSTMK M expression N • COLN M conditional_expression

    COLN  shift, and go to state 147


State 145

   84 iteration_statement: FOR RDBLT expression_statement M expression_statement • RDBRT M statement
   85                    | FOR RDBLT expression_statement M expression_statement • M expression N RDBRT M statement

    RDBRT  shift, and go to state 148

    $default  reduce using rule 1 (M)

    M  go to state 149


State 146

   82 selection_statement: IF RDBLT expression N RDBRT • M statement N
   83                    | IF RDBLT expression N RDBRT • M statement N ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 150


State 147

   43 conditional_expression: logical_OR_expression N QSTMK M expression N COLN • M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 151


State 148

   84 iteration_statement: FOR RDBLT expression_statement M expression_statement RDBRT • M statement

    $default  reduce using rule 1 (M)

    M  go to state 152


State 149

   85 iteration_statement: FOR RDBLT expression_statement M expression_statement M • expression N RDBRT M statement

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 153


State 150

   82 selection_statement: IF RDBLT expression N RDBRT M • statement N
   83                    | IF RDBLT expression N RDBRT M • statement N ELSE M statement

    FOR              shift, and go to state 72
    IF               shift, and go to state 73
    RETURN           shift, and go to state 74
    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    CRBLT            shift, and go to state 48
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    statement                  go to state 154
    compound_statement         go to state 80
    expression_statement       go to state 84
    selection_statement        go to state 85
    iteration_statement        go to state 86
    jump_statement             go to state 87


State 151

   43 conditional_expression: logical_OR_expression N QSTMK M expression N COLN M • conditional_expression

    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 102
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 155


State 152

   84 iteration_statement: FOR RDBLT expression_statement M expression_statement RDBRT M • statement

    FOR              shift, and go to state 72
    IF               shift, and go to state 73
    RETURN           shift, and go to state 74
    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    CRBLT            shift, and go to state 48
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    statement                  go to state 156
    compound_statement         go to state 80
    expression_statement       go to state 84
    selection_statement        go to state 85
    iteration_statement        go to state 86
    jump_statement             go to state 87


State 153

   85 iteration_statement: FOR RDBLT expression_statement M expression_statement M expression • N RDBRT M statement

    $default  reduce using rule 2 (N)

    N  go to state 157


State 154

   82 selection_statement: IF RDBLT expression N RDBRT M statement • N
   83                    | IF RDBLT expression N RDBRT M statement • N ELSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 158


State 155

   43 conditional_expression: logical_OR_expression N QSTMK M expression N COLN M conditional_expression •

    $default  reduce using rule 43 (conditional_expression)


State 156

   84 iteration_statement: FOR RDBLT expression_statement M expression_statement RDBRT M statement •

    $default  reduce using rule 84 (iteration_statement)


State 157

   85 iteration_statement: FOR RDBLT expression_statement M expression_statement M expression N • RDBRT M statement

    RDBRT  shift, and go to state 159


State 158

   82 selection_statement: IF RDBLT expression N RDBRT M statement N •
   83                    | IF RDBLT expression N RDBRT M statement N • ELSE M statement

    ELSE  shift, and go to state 160

    $default  reduce using rule 82 (selection_statement)


State 159

   85 iteration_statement: FOR RDBLT expression_statement M expression_statement M expression N RDBRT • M statement

    $default  reduce using rule 1 (M)

    M  go to state 161


State 160

   83 selection_statement: IF RDBLT expression N RDBRT M statement N ELSE • M statement

    $default  reduce using rule 1 (M)

    M  go to state 162


State 161

   85 iteration_statement: FOR RDBLT expression_statement M expression_statement M expression N RDBRT M • statement

    FOR              shift, and go to state 72
    IF               shift, and go to state 73
    RETURN           shift, and go to state 74
    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    CRBLT            shift, and go to state 48
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    statement                  go to state 163
    compound_statement         go to state 80
    expression_statement       go to state 84
    selection_statement        go to state 85
    iteration_statement        go to state 86
    jump_statement             go to state 87


State 162

   83 selection_statement: IF RDBLT expression N RDBRT M statement N ELSE M • statement

    FOR              shift, and go to state 72
    IF               shift, and go to state 73
    RETURN           shift, and go to state 74
    IDENTIFIER       shift, and go to state 25
    INTEGER_CONST    shift, and go to state 26
    CHARACTER_CONST  shift, and go to state 27
    STRING_LITERAL   shift, and go to state 28
    RDBLT            shift, and go to state 29
    SUB              shift, and go to state 30
    ADD              shift, and go to state 31
    MULT             shift, and go to state 32
    CRBLT            shift, and go to state 48
    AMPERSOND        shift, and go to state 33
    NOT              shift, and go to state 34
    SCOLN            shift, and go to state 75

    primary_expression         go to state 35
    postfix_expression         go to state 36
    unary_expression           go to state 37
    unary_operator             go to state 38
    multiplicative_expression  go to state 39
    additive_expression        go to state 40
    relational_expression      go to state 41
    equality_expression        go to state 42
    logical_AND_expression     go to state 43
    logical_OR_expression      go to state 44
    conditional_expression     go to state 45
    assignment_expression      go to state 52
    expression                 go to state 76
    statement                  go to state 164
    compound_statement         go to state 80
    expression_statement       go to state 84
    selection_statement        go to state 85
    iteration_statement        go to state 86
    jump_statement             go to state 87


State 163

   85 iteration_statement: FOR RDBLT expression_statement M expression_statement M expression N RDBRT M statement •

    $default  reduce using rule 85 (iteration_statement)


State 164

   83 selection_statement: IF RDBLT expression N RDBRT M statement N ELSE M statement •

    $default  reduce using rule 83 (selection_statement)
